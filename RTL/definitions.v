//DEFINITIONS FILE

/* TIMESCALE */

`timescale 1 ns / 1 ns

/* END TIMESCALE */


`ifndef DEFINITIONS
`define DEFINITIONS


/* LOGIC DEFINITIONS */

`define FALSE 1'b0
`define TRUE  1'b1

/* END LOGIC DEFINITIONS */




/* ALU MODE DEFINITIONS */

`define ALU_NOP     8'd0
`define ALU_ADD     8'd1
`define ALU_ADD_I   8'd2
`define ALU_IADD    8'd3
`define ALU_IADD_I  8'd4
`define ALU_SUB     8'd5
`define ALU_SUB_I   8'd6
`define ALU_ISUB    8'd7
`define ALU_ISUB_I  8'd8
`define ALU_MUL     8'd9
`define ALU_MUL_I   8'd10
`define ALU_IMUL    8'd11
`define ALU_IMUL_I  8'd12
`define ALU_MAC	    8'd13
`define ALU_SQR	    8'd14
`define ALU_AND	    8'd15
`define ALU_AND_I   8'd16
`define ALU_OR	    8'd17
`define ALU_OR_I    8'd18
`define ALU_XOR	    8'd19
`define	ALU_XOR_I   8'd20
`define ALU_SHLA    8'd21
`define ALU_SHRA    8'd22
`define ALU_SHLL    8'd23
`define ALU_SHRL    8'd24
`define ALU_ROL	    8'd25
`define ALU_ROR     8'd26
`define ALU_BEZ     8'd27
`define ALU_BNEZ		8'd28
`define ALU_BEQ			8'd29

/* END ALU MODE DEFINITIONS */




/* FLOW MODE DEFINITIONS */

`define FLOW_NONE 	3'd0
`define FLOW_JMP  	3'd1
`define FLOW_BEZ  	3'd2
`define FLOW_BNEZ 	3'd3
`define FLOW_BEQ  	3'd4
`define FLOW_HEAVY	3'd5  //For that time of the month

/* END FLOW MODE DEFINITIONS */




/* MEMORY MODE DEFINITIONS */

`define MEM_NONE   3'd0
`define MEM_PUSH   3'd1
`define MEM_POP	   3'd2
`define MEM_LD	   3'd3
`define MEM_ST     3'd4
`define MEM_LD_IMM 3'd5

/* END MEMORY MODE DEFINITIONS */




/* REGFILE DEFINITIONS */

`define DATA_WIDTH  16
`define ADDR_WIDTH  5
`define REG_DEPTH   32

/* END REGFILE DEFINITIONS */




/* BUS WIDTH DEFINITIONS */

`define INST_WORD_LEN  	32
`define REG_WORD_LEN   	16
`define REG_ADDR_LEN   	5
`define MEM_ADDR_LEN   	16
`define SRAM_ADDR_LEN		15
`define ALU_MODE_LEN	 	8
`define FLOW_MODE_LEN	 	3
`define MEM_MODE_LEN	 	3
`define SHIFT_LEN			 	5

/* END BUS WIDTH DEFINITIONS */




/* POST DECODE FLIP FLOP DEFINITIONS */

`define DEC_FF_LEN			`ALU_MODE_LEN + `MEM_MODE_LEN + `FLOW_MODE_LEN + 2 + `SHIFT_LEN + `REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN

`define DEC_FF_ALU			`DEC_FF_LEN
`define DEC_FF_MEM			`MEM_MODE_LEN + `FLOW_MODE_LEN + 2 + `SHIFT_LEN + `REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_FLOW			`FLOW_MODE_LEN + 2 + `SHIFT_LEN + `REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_WE				2 + `SHIFT_LEN + `REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_BRFL			1 + `SHIFT_LEN + `REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_SHIFT		`SHIFT_LEN + `REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_DEST			`REG_ADDR_LEN + 3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_S1				3*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_S2				2*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_S3				1*`REG_WORD_LEN + `MEM_ADDR_LEN
`define DEC_FF_JADDR		`MEM_ADDR_LEN

/* END POST DECODE FLIP FLOP DEFINITIONS */




/* POST EXECUTE FLIP FLOP DEFINITIONS */

`define ALU_FF_LEN			`MEM_MODE_LEN + `FLOW_MODE_LEN + 2 + `REG_ADDR_LEN + `MEM_ADDR_LEN + `REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_MEM			`ALU_FF_LEN
`define ALU_FF_FLOW			`FLOW_MODE_LEN + 2 + `REG_ADDR_LEN + `MEM_ADDR_LEN + `REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_WB				2 + `REG_ADDR_LEN + `MEM_ADDR_LEN + `REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_BRFL			1 + `REG_ADDR_LEN + `MEM_ADDR_LEN + `REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_DEST			`REG_ADDR_LEN + `MEM_ADDR_LEN + `REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_JADDR		`MEM_ADDR_LEN + `REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_S1				`REG_WORD_LEN + `REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_S2				`REG_WORD_LEN + `REG_WORD_LEN
`define ALU_FF_ALUOUT		`REG_WORD_LEN

/* POST EXECUTE FLIP FLOP DEFINITIONS */

`endif

